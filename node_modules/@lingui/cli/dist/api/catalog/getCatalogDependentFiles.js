"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCatalogDependentFiles = void 0;
const getFallbackListForLocale_1 = require("./getFallbackListForLocale");
const promises_1 = __importDefault(require("node:fs/promises"));
const fileExists = async (path) => !!(await promises_1.default.stat(path).catch(() => false));
/**
 * Return all files catalog implicitly depends on.
 */
async function getCatalogDependentFiles(catalog, locale) {
    const files = new Set([catalog.templateFile]);
    (0, getFallbackListForLocale_1.getFallbackListForLocale)(catalog.config.fallbackLocales, locale).forEach((locale) => {
        files.add(catalog.getFilename(locale));
    });
    if (catalog.config.sourceLocale && locale !== catalog.config.sourceLocale) {
        files.add(catalog.getFilename(catalog.config.sourceLocale));
    }
    const out = [];
    for (const file of files) {
        if (await fileExists(file)) {
            out.push(file);
        }
    }
    return out;
}
exports.getCatalogDependentFiles = getCatalogDependentFiles;
